package com.mediaphile_bit272.mediaphilev2;

import java.io.IOException;
import java.io.InputStream;

import org.apache.http.HttpResponse;
import org.apache.http.HttpStatus;
import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.entity.BufferedHttpEntity;
import org.apache.http.impl.client.DefaultHttpClient;

import android.app.AlertDialog;
import android.app.Fragment;
import android.content.DialogInterface;
import android.os.Bundle;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;

public class AddMovieFragment extends Fragment {
	
	EditText movieTitleEditText;
	Button titleSearchButton;
	Button saveMovieButton;
	
	String[] matrixSearchResults = {"The Matrix (1999)", "The Matrix Reloaded (2003)", "The Matrix Revolutions (2003)", "The Matrix Revisited (2001)", "Armitage III: Poly Matrix (1997)"};
	
	Movie matrixMovie = new Movie("The Matrix", "31 Mar 1999",
			"1999", "R", "Action, Adventure, Sci-Fi",
			"Keanu Reeves, Laurence Fishburne, Carrie-Anne Moss, Hugo Weaving",
			"A computer hacker learns from mysterious rebels about the true nature of his reality and his role in the war against its controllers.",
			"2 h 16 min", "http://ia.media-imdb.com/images/M/MV5BMjEzNjg1NTg2NV5BMl5BanBnXkFtZTYwNjY3MzQ5._V1_SX300.jpg");
	
		
	OnClickListener titleSearchButtonListener = new OnClickListener() {
		@Override  public void onClick(View v) {
			
			String searchString = movieTitleEditText.getText().toString();
			
			Toast.makeText(getActivity(), "Your search string is " + searchString, Toast.LENGTH_LONG).show();
			
			AlertDialog.Builder movieChoices = new AlertDialog.Builder(getActivity());
			movieChoices.setTitle("Select A Movie").setItems(matrixSearchResults, new DialogInterface.OnClickListener() {
				@Override  public void onClick(DialogInterface dialog, int which) {
					Toast.makeText(getActivity(), "You selected " + matrixSearchResults[which], Toast.LENGTH_LONG).show();
				}
			});
			movieChoices.show();
		}  
	};
	   
	 
	 OnClickListener saveMovieButtonListener = new OnClickListener() {

			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub
				
				InputStream result = null;

				HttpClient httpClient = new DefaultHttpClient();
				HttpGet get = new HttpGet("http://www.omdbapi.com/?t=the%20matrix"); // For example
				HttpResponse response = null;
				try {
					response = httpClient.execute(get);
				} catch (ClientProtocolException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}

				if (response != null && response.getStatusLine().getStatusCode() == HttpStatus.SC_OK) {
				    BufferedHttpEntity bufferedHttpEntity = null;
					try {
						bufferedHttpEntity = new BufferedHttpEntity(response.getEntity());
					} catch (IOException e1) {
						// TODO Auto-generated catch block
						e1.printStackTrace();
					}
				    try {
						result = bufferedHttpEntity.getContent();
					} catch (IOException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
				    
				    Log.d("SUCCESS!! ", convertStreamToString(result));
				} else {
				    // insert error handling
				}
				
//				String host = "android";
//				String path = "/?t=the%20matrix";
//				String ret = null;
//				try {
//					ret = converse(host, 80, path);
//				} catch (IOException e) {
//					// TODO Auto-generated catch block
//					e.printStackTrace();
//				}
//				
			}
			 
	 };	 
	  
	 @Override
	  public View onCreateView(LayoutInflater inflater, ViewGroup container,
	    Bundle savedInstanceState) {
		 
		  View view = inflater.inflate(R.layout.layout_addmoviefragment, null);				 
	      return view;
	   }
	 public void onActivityCreated(Bundle savedInstanceState) {
		 super.onActivityCreated(savedInstanceState);
		 
		 movieTitleEditText = (EditText) getView().findViewById(R.id.movieTitleEditText);
		 titleSearchButton = (Button) getView().findViewById(R.id.titleSearchButton);
		 titleSearchButton.setOnClickListener(titleSearchButtonListener);
		 
		 saveMovieButton = (Button) getView().findViewById(R.id.saveMovieButton);
		 saveMovieButton.setOnClickListener(saveMovieButtonListener);
		 
		 Log.d("ACTIVITY!! ", "The AddMovieFragment activity has been created.");
		 
	 }	 
	 
	 String convertStreamToString(java.io.InputStream is) {
	    try {
	        return new java.util.Scanner(is).useDelimiter("\\A").next();
	    } catch (java.util.NoSuchElementException e) {
	        return "";
	    }
	}
	 
//	 public static String converse(String host,int port, String path) throws IOException {
//			
//			HttpHost target = new HttpHost(host, port);
//			HttpClient client = new DefaultHttpClient();
//			HttpGet get = new HttpGet(path);
//			HttpEntity results = null;
//			try {
//				HttpResponse response = client.execute(target, get);
//				results = response.getEntity();
//				return EntityUtils.toString(results);
//			} catch (Exception e) {
//				throw new RuntimeException("Web Service Failure");
//			} finally {
//				if (results != null)
//					try {
//						results.consumeContent();
//					} catch (IOException e) {
//						
//					}
//			}
			
//			 URL url = new URL("http", host, port, path);
//			 URLConnection conn = url.openConnection();
//			 
//			 conn.setDoInput(true);
//			 conn.setAllowUserInteraction(true);
//			 
//			 conn.connect();
//			 
//			 StringBuilder sb = new StringBuilder();
//			 BufferedReader in = new BufferedReader(
//					 new InputStreamReader(conn.getInputStream()));
//			 String line;
//			 while ((line = in.readLine()) != null) {
//				 sb.append(line);
//			 }
//			 in.close();
//			 return sb.toString();
//		 }
}